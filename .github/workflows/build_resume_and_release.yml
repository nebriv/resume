name: Build, Tag, and Release Resume

on:
  push:
    branches: 
      - '**'
    paths:
      - '**.tex'
      - '**.cls'
jobs:
  spell_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install aspell dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y aspell

      - name: Check spelling in .tex file
        run: |
          misspelled_words=$(aspell --ignore-case --mode=tex --personal=./custom_dict.txt list < resume.tex)
          if [ ! -z "$misspelled_words" ]; then
            echo "Found misspelled words:"
            echo "$misspelled_words"
            exit 1
          fi

      - name: Install ChkTeX
        run: sudo apt-get install chktex

      - name: Run ChkTeX
        run: chktex *.tex

      - name: Check with TeXtidote and generate Markdown report
        run: |
          docker run -v $PWD:/documents sylvainhalle/textidote --check en --output md resume.tex > textidote_report.md

      - name: Upload TeXtidote report
        uses: actions/upload-artifact@v2
        with:
          name: tex-report
          path: textidote_report.md

  build_tag_release:
    needs: spell_check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nebriv/docker-lualatex:master
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: bump_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          tag_prefix: "resume-${{ github.ref_name }}-"
          release_branches: ".*"
      
      - name: Update Version in Resume
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_tag }}"
          sed -i "s/VERSIONTAGPLACEHOLDER/${NEW_VERSION}/g" *.cls
          
      - name: Build resume
        run: lualatex resume.tex

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.bump_version.outputs.new_tag }}
          artifacts: "./resume.pdf"
          body: "Release of the updated resume"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload resume.pdf
        uses: actions/upload-artifact@v2
        with:
          name: resume-artifact
          path: resume.pdf

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Download resume.pdf
        uses: actions/download-artifact@v2
        with:
          name: resume-artifact

      - name: Rename PDF to include branch name
        run: |
          mv resume.pdf ${{ github.ref_name }}-resume.pdf

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: .
